name: perl
on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:
  create:
jobs:
  notify:
    runs-on: ubuntu-latest
    continue-on-error: true
    if: ${{ always() }}
    steps:
      - uses: PDLPorters/devops/github-actions/irc-notifications@master
        with:
          target-notifications: true
  ci:
    runs-on: ${{ matrix.os }}
    if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' }}
    needs: notify
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        perl-version: ['5.10', '5.14', '5.20']
        include:
          - perl-version: '5.30'
            os: ubuntu-latest
            release-test: true
            coverage: true
          #- perl-version: '5.30'
          #  os: windows-latest
          - perl-version: '5.30'
            os: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'ci-dist: target-setup-perl'
        uses: PDLPorters/devops/github-actions/ci-dist@master
        with:
          target-setup-perl: true
          perl-version: ${{ matrix.perl-version }}
      - name: Install Gnuplot
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: sudo apt-get install gnuplot gnuplot-qt
      - name: Install Gnuplot
        if: matrix.os == 'macos-latest'
        shell: bash
        run: brew install gnuplot
      - name: Install Gnuplot
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
            choco install gnuplot
            pwsh -c 'echo "C:\Program Files\gnuplot\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append'
      - name: Install PDL dependencies
        if: matrix.os == 'ubuntu-latest'
        uses: PDLPorters/devops/github-actions/install-dep-pdl-dep@master
      - name: 'ci-dist: target-all'
        uses: PDLPorters/devops/github-actions/ci-dist@master
        with:
          target-setup-perl: false
          target-install-dist-perl-deps: true
          target-test-release-testing: true
          target-test: true
          test-enable-release-testing: ${{ matrix.release-test }}
          test-enable-coverage: ${{ matrix.coverage }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build-status:
    runs-on: ubuntu-latest
    continue-on-error: true
    if: ${{ always() }}
    needs: [ 'ci' ]
    steps:
      - uses: PDLPorters/devops/github-actions/irc-notifications@master
        with:
          target-build-status: true
          needs: ${{ toJSON(needs) }}
